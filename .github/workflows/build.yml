name: google drive

on:
  push:
    branches:
      - master
      - 'SP/**'
      - 'HF/**'
      - 'feature/**'
      - company_release
      - 'GOOGLEDOCS**'
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      commitMessage:
        description: Enter the Commit Message
        required: true
env:
  SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  QUAY_PASSWORD:  ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}
  GITHUB_EVENT: ${{ github.event_name }}
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  Run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: [ build , source_clear, e2e_tests ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.33.0

      - name: Setup maven
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: "Login to Quay.io"
        uses: docker/login-action@v2.1.0
        with:
          registry: quay.io
          username: ${{ env.QUAY_USERNAME }}
          password: ${{ env.QUAY_PASSWORD }}

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_STAGING_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.AWS_S3_STAGING_SECRET_KEY }}
          aws-region: eu-west-1

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Run ${{ matrix.stage }}
        if: ${{ ( matrix.stage != 'source_clear' && github.ref_name != 'company_release') || matrix.stage == 'source_clear'  }}
        run: |
           bash _ci/init.sh
           bash _ci/${{ matrix.stage }}.sh
  pmd_scan:
    name: "PMD Scan"
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      !contains(github.event.head_commit.message, '[skip pmd]') &&
      !contains(github.event.head_commit.message, '[skip tests]') &&
      !contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: Alfresco/ya-pmd-scan@v2.0.2
        with:
          fail-on-new-issues: "false"
          create-github-annotations: "false"

  Release:
    if: ${{ ( startsWith(github.ref_name, 'HF/')  || startsWith(github.ref_name, 'SP/') || github.ref_name == 'master' ) || startsWith(github.ref_name, 'feature/')  &&
        contains(github.event.head_commit.message, '[trigger release]') || contains(inputs.commitMessage, '[trigger release]') }}
    runs-on: ubuntu-latest
    needs: Run
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_STAGING_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.AWS_S3_STAGING_SECRET_KEY }}
          aws-region: eu-west-1

      - name: Get branch name
        uses: Alfresco/alfresco-build-tools/.github/actions/get-branch-name@v1.23.0

      - uses: Alfresco/alfresco-build-tools/.github/actions/configure-git-author@v1.30.0
        with:
          username: ${{ env.GIT_USERNAME }}
          email: ${{ env.GIT_EMAIL }}
          global: true
      - name: Run Script Release to nexus
        run: |
          bash _ci/init.sh
          bash _ci/release.sh
          source _ci/prepare_staging_deploy.sh
          git clone --depth=1 https://github.com/Alfresco/third-party-license-overrides.git
          python3 ./third-party-license-overrides/thirdPartyLicenseCSVCreator.py --project "${GITHUB_WORKSPACE}" --version "${RELEASE_VERSION}" --combined --output "deploy_dir_enterprise"
          rm -rf third-party-license-overrides

      - name: "Release to S3 Staging Bucket"
        run: | 
           aws s3 cp --recursive ./deploy_dir_community s3://alfresco-artefacts-staging/community/GoogleDocs/${VERSION}
           aws s3 cp --recursive ./deploy_dir_enterprise s3://alfresco-artefacts-staging/enterprise/GoogleDocs/${VERSION}

  Company-Release:
    if: github.ref_name == 'company_release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_RELEASE_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_RELEASE_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Run Script
        run: |
          bash _ci/init.sh
          source _ci/prepare_release_deploy.sh

      - name: "Release to Community version to S3 Staging Bucket"
        run: |
          aws s3 cp --recursive ./deploy_dir_community s3://eu.dl.alfresco.com/release/community/GoogleDocs/${VERSION}

      - name: "Release to enterprise version to S3 Bucket"
        run: |
          aws s3 cp --recursive ./deploy_dir_enterprise s3://eu.dl.alfresco.com/release/enterprise/GoogleDocs/${VERSION}
